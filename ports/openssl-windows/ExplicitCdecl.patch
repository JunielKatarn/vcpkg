diff --git a/apps/win32_init.c b/apps/win32_init.c
index df4bff41a2..b8436cc54f 100644
--- a/apps/win32_init.c
+++ b/apps/win32_init.c
@@ -18,7 +18,7 @@ static UINT saved_cp;
 static int newargc;
 static char **newargv;
 
-static void cleanup(void)
+static void __cdecl cleanup(void)
 {
     int i;
 
diff --git a/crypto/asn1/tasn_enc.c b/crypto/asn1/tasn_enc.c
index 30be314ff9..e04e20f37e 100644
--- a/crypto/asn1/tasn_enc.c
+++ b/crypto/asn1/tasn_enc.c
@@ -354,7 +354,7 @@ typedef struct {
     ASN1_VALUE *field;
 } DER_ENC;
 
-static int der_cmp(const void *a, const void *b)
+static int __cdecl der_cmp(const void *a, const void *b)
 {
     const DER_ENC *d1 = a, *d2 = b;
     int cmplen, i;
diff --git a/crypto/init.c b/crypto/init.c
index 9fc0e8ef68..1a9e0cae86 100644
--- a/crypto/init.c
+++ b/crypto/init.c
@@ -119,7 +119,7 @@ err:
 
 static CRYPTO_ONCE register_atexit = CRYPTO_ONCE_STATIC_INIT;
 #if !defined(OPENSSL_SYS_UEFI) && defined(_WIN32)
-static int win32atexit(void)
+static int __cdecl win32atexit(void)
 {
     OPENSSL_cleanup();
     return 0;
diff --git a/crypto/objects/o_names.c b/crypto/objects/o_names.c
index c4355370cb..254efbde61 100644
--- a/crypto/objects/o_names.c
+++ b/crypto/objects/o_names.c
@@ -30,7 +30,7 @@
  * transparently assign function pointers to it.
  */
 #if defined(OPENSSL_SYS_VMS_DECC) || defined(OPENSSL_SYS_UEFI)
-static int obj_strcasecmp(const char *a, const char *b)
+static int __cdecl obj_strcasecmp(const char *a, const char *b)
 {
     return strcasecmp(a, b);
 }
@@ -48,7 +48,7 @@ static CRYPTO_RWLOCK *obj_lock = NULL;
 
 struct name_funcs_st {
     unsigned long (*hash_func) (const char *name);
-    int (*cmp_func) (const char *a, const char *b);
+    int (__cdecl *cmp_func) (const char *a, const char *b);
     void (*free_func) (const char *, int, const char *);
 };
 
@@ -79,7 +79,7 @@ int OBJ_NAME_init(void)
 }
 
 int OBJ_NAME_new_index(unsigned long (*hash_func) (const char *),
-                       int (*cmp_func) (const char *, const char *),
+                       int (__cdecl *cmp_func) (const char *, const char *),
                        void (*free_func) (const char *, int, const char *))
 {
     int ret = 0, i, push;
@@ -334,7 +334,7 @@ static void do_all_sorted_fn(const OBJ_NAME *name, void *d_)
     d->names[d->n++] = name;
 }
 
-static int do_all_sorted_cmp(const void *n1_, const void *n2_)
+static int __cdecl do_all_sorted_cmp(const void *n1_, const void *n2_)
 {
     const OBJ_NAME *const *n1 = n1_;
     const OBJ_NAME *const *n2 = n2_;
diff --git a/crypto/objects/obj_dat.c b/crypto/objects/obj_dat.c
index ef2d1e0dda..3c24a56ceb 100644
--- a/crypto/objects/obj_dat.c
+++ b/crypto/objects/obj_dat.c
@@ -580,14 +580,14 @@ int OBJ_sn2nid(const char *s)
 }
 
 const void *OBJ_bsearch_(const void *key, const void *base, int num, int size,
-                         int (*cmp) (const void *, const void *))
+                         int (__cdecl *cmp) (const void *, const void *))
 {
     return OBJ_bsearch_ex_(key, base, num, size, cmp, 0);
 }
 
 const void *OBJ_bsearch_ex_(const void *key, const void *base_, int num,
                             int size,
-                            int (*cmp) (const void *, const void *),
+                            int (__cdecl *cmp) (const void *, const void *),
                             int flags)
 {
     const char *base = base_;
diff --git a/include/openssl/objects.h b/include/openssl/objects.h
index 5e8b5762f8..cabe66ebc4 100644
--- a/include/openssl/objects.h
+++ b/include/openssl/objects.h
@@ -43,7 +43,7 @@ typedef struct obj_name_st {
 
 int OBJ_NAME_init(void);
 int OBJ_NAME_new_index(unsigned long (*hash_func) (const char *),
-                       int (*cmp_func) (const char *, const char *),
+                       int (__cdecl *cmp_func) (const char *, const char *),
                        void (*free_func) (const char *, int, const char *));
 const char *OBJ_NAME_get(const char *name, int type);
 int OBJ_NAME_add(const char *name, int type, const char *data);
@@ -67,14 +67,14 @@ int OBJ_ln2nid(const char *s);
 int OBJ_sn2nid(const char *s);
 int OBJ_cmp(const ASN1_OBJECT *a, const ASN1_OBJECT *b);
 const void *OBJ_bsearch_(const void *key, const void *base, int num, int size,
-                         int (*cmp) (const void *, const void *));
+                         int (__cdecl *cmp) (const void *, const void *));
 const void *OBJ_bsearch_ex_(const void *key, const void *base, int num,
                             int size,
-                            int (*cmp) (const void *, const void *),
+                            int (__cdecl *cmp) (const void *, const void *),
                             int flags);
 
 # define _DECLARE_OBJ_BSEARCH_CMP_FN(scope, type1, type2, nm)    \
-  static int nm##_cmp_BSEARCH_CMP_FN(const void *, const void *); \
+  static int __cdecl nm##_cmp_BSEARCH_CMP_FN(const void *, const void *); \
   static int nm##_cmp(type1 const *, type2 const *); \
   scope type2 * OBJ_bsearch_##nm(type1 *key, type2 const *base, int num)
 
@@ -111,7 +111,7 @@ const void *OBJ_bsearch_ex_(const void *key, const void *base, int num,
  */
 
 # define IMPLEMENT_OBJ_BSEARCH_CMP_FN(type1, type2, nm)  \
-  static int nm##_cmp_BSEARCH_CMP_FN(const void *a_, const void *b_)    \
+  static int __cdecl nm##_cmp_BSEARCH_CMP_FN(const void *a_, const void *b_)    \
       { \
       type1 const *a = a_; \
       type2 const *b = b_; \
@@ -125,7 +125,7 @@ const void *OBJ_bsearch_ex_(const void *key, const void *base, int num,
       extern void dummy_prototype(void)
 
 # define IMPLEMENT_OBJ_BSEARCH_GLOBAL_CMP_FN(type1, type2, nm)   \
-  static int nm##_cmp_BSEARCH_CMP_FN(const void *a_, const void *b_)    \
+  static int __cdecl nm##_cmp_BSEARCH_CMP_FN(const void *a_, const void *b_)    \
       { \
       type1 const *a = a_; \
       type2 const *b = b_; \
diff --git a/include/openssl/stack.h b/include/openssl/stack.h
index cfc075057a..b26149bbc1 100644
--- a/include/openssl/stack.h
+++ b/include/openssl/stack.h
@@ -16,7 +16,7 @@ extern "C" {
 
 typedef struct stack_st OPENSSL_STACK; /* Use STACK_OF(...) instead */
 
-typedef int (*OPENSSL_sk_compfunc)(const void *, const void *);
+typedef int (__cdecl *OPENSSL_sk_compfunc)(const void *, const void *);
 typedef void (*OPENSSL_sk_freefunc)(void *);
 typedef void *(*OPENSSL_sk_copyfunc)(const void *);
 
diff --git a/apps/openssl.c b/apps/openssl.c
index 9648f35b02..c070e9dbbe 100644
--- a/apps/openssl.c
+++ b/apps/openssl.c
@@ -116,7 +116,7 @@ static char *make_config_name(void)
     return p;
 }
 
-int main(int argc, char *argv[])
+int __cdecl main(int argc, char *argv[])
 {
     FUNCTION f, *fp;
     LHASH_OF(FUNCTION) *prog = NULL;
@@ -640,7 +640,7 @@ static unsigned long function_hash(const FUNCTION * a)
     return OPENSSL_LH_strhash(a->name);
 }
 
-static int SortFnByName(const void *_f1, const void *_f2)
+static int __cdecl SortFnByName(const void *_f1, const void *_f2)
 {
     const FUNCTION *f1 = _f1;
     const FUNCTION *f2 = _f2;
diff --git a/crypto/ui/ui_openssl.c b/crypto/ui/ui_openssl.c
index 0ec9f0daf3..7acea74004 100644
--- a/crypto/ui/ui_openssl.c
+++ b/crypto/ui/ui_openssl.c
@@ -159,7 +159,7 @@ struct IOSB {
 # ifdef SIGACTION
 static struct sigaction savsig[NX509_SIG];
 # else
-static void (*savsig[NX509_SIG]) (int);
+static void (__cdecl *savsig[NX509_SIG]) (int);
 # endif
 
 # ifdef OPENSSL_SYS_VMS
@@ -183,7 +183,7 @@ static int is_a_tty;
 /* Declare static functions */
 # if !defined(OPENSSL_SYS_WINCE)
 static int read_till_nl(FILE *);
-static void recsig(int);
+static void __cdecl recsig(int);
 static void pushsig(void);
 static void popsig(void);
 # endif
@@ -659,7 +659,7 @@ static void popsig(void)
 #  endif
 }
 
-static void recsig(int i)
+static void __cdecl recsig(int i)
 {
     intr_signal = i;
 }
diff --git a/ssl/s3_lib.c b/ssl/s3_lib.c
index 066bf47221..0162fa70af 100644
--- a/ssl/s3_lib.c
+++ b/ssl/s3_lib.c
@@ -3198,7 +3198,7 @@ static SSL_CIPHER ssl3_scsvs[] = {
     },
 };
 
-static int cipher_compare(const void *a, const void *b)
+static int __cdecl cipher_compare(const void *a, const void *b)
 {
     const SSL_CIPHER *ap = (const SSL_CIPHER *)a;
     const SSL_CIPHER *bp = (const SSL_CIPHER *)b;
diff --git a/test/testutil/main.c b/test/testutil/main.c
index d3ccdda391..f86bc5dbc5 100644
--- a/test/testutil/main.c
+++ b/test/testutil/main.c
@@ -31,7 +31,7 @@ static void check_arg_usage(void)
         test_printf_stderr("Warning arguments %zu and later unchecked\n", i);
 }
 
-int main(int argc, char *argv[])
+int __cdecl main(int argc, char *argv[])
 {
     int ret = EXIT_FAILURE;
 
